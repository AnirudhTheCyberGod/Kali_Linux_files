Cyber_ops_with_bash oreilly:
Chapter 1:

listing: 
ls
ls -a
ls -l 

making directory:
mkdir dirname
mkdir -p /dirname/dirname/dirname
mkdir {dirname,dirname,dirname,dirname}

to verify a keywork type:

ex: type if


script:

#usr/bin/env bash

Task:

1. ifconfig > ipaddress.txt & -> to read ip addr and store stdout to ippaddress.txt
2. ifconfig &>> ipaddress.txt  -> to read ip addr and append it to ippaddress.txt
3. cp -r sample/intro.txt sample1 > result.txt 2> err.msg
4.  ls -l | more
5. done
6. done




Chapter 2: BASH PREMIER

printing:

echo "somestring"
printf "somestring\n"

Variables:

myVar  = "anirudh the king"
echo $myVar


# var="sample"
# echo $var

# firstvar="Great kirikalan show"
# secondvar="Welcome to $firstvar"
# echo $secondvar

#cmdout=$(pwd)
#echo $cmdout


echo "Enter your name: "
read myvar
echo "Your name is $myvar"



CONDITIONS:

if cmd
then some cmd
else
   other cmd
fi




eg:

if cd ~/Desktop/Cyber_Ops_With_Bash 
then
	echo "Cyber_Ops_With_Bash contains the following: "
	ls -l
fi

eg:

if cd ~/Desktop/Cyber_Ops_With_Bash | ls | grep "txt"
then
	echo "Text file exists in Cyber_Ops_With_Bash"
else
	echo "Text file do not exists in Cyber_Ops_With_Bash"
fi


For checking files in system: 



if [[-e $FILENAME]]
then 
    echo $FILENAME exist
fi


-f   ->>> for file
-e    ->>>  test if file exists
-d    ->>>  test if directory exists
-r    ->>>  test if file exists and is readable
-w    ->>>  test if file exists  and is writable
-x    ->>>  test if file exists  and is executable

eg:

FILENAME="/home/kali/Desktop/Cyber_Ops_With_Bash/mytask.sh"
if test -f "$FILENAME";
then
	echo "$FILENAME exists"	
fi

FILENAME="/home/kali/Desktop/Cyber_Ops_With_Bash/mytask.sh"
if test -x "$FILENAME";
then
	echo "$FILENAME is EXECUTABLE !!!"	
fi




-----------------------------------------------------------------


-lt --->>>> less than

-gt -->>>>>. greater than

-eq -->>   equal

if $VAR1 -lt $VAR2;
then
	echo "$VAR1 is smaller than $VAR2 !!!"	
else
    echo "$VAR2 is smaller than $VAR1 !!!"
fi
echo "Enter number one: "
read VAR1
echo "Enter number two: "
read VAR2

if test $VAR1 -gt $VAR2;
then
	echo "$VAR1 is greater than $VAR2 !!!"	
else
    echo "$VAR2 is greater than $VAR1 !!!"

fi

echo "Enter number one: "
read VAR1
echo "Enter number two: "
read VAR2

if test $VAR1 -eq $VAR2;
then
	echo "$VAR1 is equal to $VAR2 !!!"	
else
    echo "Not equal !!!"
fi

#While loop

#i=0
#while ((i<1000))
#do 
#	echo $i
#	let i++
#done

#for ((i=0;i<10;i++))
#do
#	echo $i
#done

#bash ./params.sh Anirudh Is a good boy

for ARGS
do 
  echo "command is: $ARG"
done

-----------------------------------------------

grep

-c   
-E
-f
-i
-l
-n
-P
-R,-r



ex: grep 'T.o' frost.txt



